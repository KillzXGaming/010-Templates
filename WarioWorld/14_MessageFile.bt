//------------------------------------------------
//--- 010 Editor v7.0.2 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
struct File{
struct Message;
struct MessageID;
struct TextInfo;

struct Header
{
   char magic[4];
   uint numValues;
   uint valueOffsets;
   uint numMessageIds;
   uint unkOffset2;

   FSeek(valueOffsets * 4);
   uint offsets[numValues];

    local int t = 0;
    for (t = 0; t < numValues; t++)
    {
        FSeek(offsets[t] * 4);
        Message message;
    }

   FSeek(unkOffset2 * 4);
   uint messageIdOffsets[numMessageIds];

    for (t = 0; t < numMessageIds; t++)
    {
        FSeek(messageIdOffsets[t] * 4);
        MessageID messageID;
    }

}header <bgcolor=0xCDE6FF>;

typedef struct
{
   float value;
   uint offset;

   local uint pos <format=hex> = FTell();

   FSeek(offset * 4);
   uint offsets[10];

    local int i = 0;
    for (i = 0; i < 10; i++)
    {
        FSeek(offsets[i] * 4);
        TextInfo textInfo;
    }

   FSeek(pos);
} MessageID;

typedef struct
{
    float unk;
    float unk;
    float unk;
} TextInfo;

typedef struct
{
   string value;
} Message;

}file;